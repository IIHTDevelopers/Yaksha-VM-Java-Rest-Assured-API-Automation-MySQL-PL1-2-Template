<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="18" passed="18" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-11-22T19:53:23 IST" name="Default suite" finished-at="2024-11-22T19:54:21 IST" duration-ms="57945">
    <groups>
      <group name="PL1">
        <method signature="RestAssured_TestCases_PL1.getAllStocks()[pri:1, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" name="getAllStocks" class="testcases.RestAssured_TestCases_PL1"/>
        <method signature="RestAssured_TestCases_PL1.getMainStore()[pri:2, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" name="getMainStore" class="testcases.RestAssured_TestCases_PL1"/>
        <method signature="RestAssured_TestCases_PL1.getRequisitionByDateRange()[pri:3, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" name="getRequisitionByDateRange" class="testcases.RestAssured_TestCases_PL1"/>
        <method signature="RestAssured_TestCases_PL1.getPatientConsumptions()[pri:4, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" name="getPatientConsumptions" class="testcases.RestAssured_TestCases_PL1"/>
        <method signature="RestAssured_TestCases_PL1.getPatientConsumptionInfoByPatientIdAndVisitId()[pri:5, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" name="getPatientConsumptionInfoByPatientIdAndVisitId" class="testcases.RestAssured_TestCases_PL1"/>
        <method signature="RestAssured_TestCases_PL1.getBillingSchemeBySchemeId()[pri:6, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" name="getBillingSchemeBySchemeId" class="testcases.RestAssured_TestCases_PL1"/>
        <method signature="RestAssured_TestCases_PL1.getBillingSummaryByPatientId()[pri:7, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" name="getBillingSummaryByPatientId" class="testcases.RestAssured_TestCases_PL1"/>
        <method signature="RestAssured_TestCases_PL1.getConsumptionsListOfAPatientById()[pri:8, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" name="getConsumptionsListOfAPatientById" class="testcases.RestAssured_TestCases_PL1"/>
        <method signature="RestAssured_TestCases_PL1.getReturnConsumptionsList()[pri:9, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" name="getReturnConsumptionsList" class="testcases.RestAssured_TestCases_PL1"/>
        <method signature="RestAssured_TestCases_PL1.getDischargedPatients()[pri:10, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" name="getDischargedPatients" class="testcases.RestAssured_TestCases_PL1"/>
        <method signature="RestAssured_TestCases_PL1.getAdmittedPatients()[pri:11, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" name="getAdmittedPatients" class="testcases.RestAssured_TestCases_PL1"/>
        <method signature="RestAssured_TestCases_PL1.searchIpdPatientByPatientId()[pri:12, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" name="searchIpdPatientByPatientId" class="testcases.RestAssured_TestCases_PL1"/>
        <method signature="RestAssured_TestCases_PL1.getPatientProvisionalInfo()[pri:13, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" name="getPatientProvisionalInfo" class="testcases.RestAssured_TestCases_PL1"/>
        <method signature="RestAssured_TestCases_PL1.getProvisionalItemsListByPatientIdAndSchemeId()[pri:14, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" name="getProvisionalItemsListByPatientIdAndSchemeId" class="testcases.RestAssured_TestCases_PL1"/>
        <method signature="RestAssured_TestCases_PL1.getInvoicesByDateRange()[pri:15, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" name="getInvoicesByDateRange" class="testcases.RestAssured_TestCases_PL1"/>
        <method signature="RestAssured_TestCases_PL1.getProviderList()[pri:16, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" name="getProviderList" class="testcases.RestAssured_TestCases_PL1"/>
        <method signature="RestAssured_TestCases_PL1.getUserslist()[pri:17, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" name="getUserslist" class="testcases.RestAssured_TestCases_PL1"/>
        <method signature="RestAssured_TestCases_PL1.getCurrentFiscalYearDetails()[pri:18, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" name="getCurrentFiscalYearDetails" class="testcases.RestAssured_TestCases_PL1"/>
      </group> <!-- PL1 -->
    </groups>
    <test started-at="2024-11-22T19:53:23 IST" name="Default test" finished-at="2024-11-22T19:54:21 IST" duration-ms="57945">
      <class name="testcases.RestAssured_TestCases_PL1">
        <test-method signature="getAllStocks()[pri:1, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" started-at="2024-11-22T19:53:23 IST" name="getAllStocks" description="1. Send a GET request to get list of stocks
2. Validate that all the ItemId, ItemName, and GenericName are not null.
3. Verify the response status code is 200." finished-at="2024-11-22T19:53:58 IST" duration-ms="34707" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllStocks -->
        <test-method signature="getMainStore()[pri:2, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" started-at="2024-11-22T19:53:58 IST" name="getMainStore" description="1. Send a GET request to get details of main store
2. Validate that all StoreId are not null .
3. Verify the response status code is 200." finished-at="2024-11-22T19:53:59 IST" duration-ms="1043" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMainStore -->
        <test-method signature="getRequisitionByDateRange()[pri:3, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" started-at="2024-11-22T19:53:59 IST" name="getRequisitionByDateRange" description="1. Send a GET request to get dispensary requisition by date range
2. Validate that RequistionNo, RequisitionStatus are not null and requisitionIds are unique.
3. Verify the response status code is 200." finished-at="2024-11-22T19:54:01 IST" duration-ms="1763" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequisitionByDateRange -->
        <test-method signature="getPatientConsumptions()[pri:4, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" started-at="2024-11-22T19:54:01 IST" name="getPatientConsumptions" description="1. Send a GET request to get details of patient&#039;s consumption.
2. Validate that all the patient IDs and Hospital No. are not null.
3. Verify the response status code is 200." finished-at="2024-11-22T19:54:04 IST" duration-ms="3290" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPatientConsumptions -->
        <test-method signature="getPatientConsumptionInfoByPatientIdAndVisitId()[pri:5, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" started-at="2024-11-22T19:54:04 IST" name="getPatientConsumptionInfoByPatientIdAndVisitId" description="1. Send a GET request to get get Patient Consumption Info By Patient Id And Visit Id
2. Validate that patient Visit Id is unique and patient Id From Response is same as sent in the request.
3. Verify the response status code is 200." finished-at="2024-11-22T19:54:06 IST" duration-ms="1246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPatientConsumptionInfoByPatientIdAndVisitId -->
        <test-method signature="getBillingSchemeBySchemeId()[pri:6, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" started-at="2024-11-22T19:54:06 IST" name="getBillingSchemeBySchemeId" description="1. Send a GET request to get Billing Scheme By Scheme Id
2. Validate that all scheme Code is not null and scheme Id From Response is same as in request.
3. Verify the response status code is 200." finished-at="2024-11-22T19:54:06 IST" duration-ms="647" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBillingSchemeBySchemeId -->
        <test-method signature="getBillingSummaryByPatientId()[pri:7, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" started-at="2024-11-22T19:54:06 IST" name="getBillingSummaryByPatientId" description="1. Send a GET request to retrieve the billing summary for a specific patient by PatientId.
2. Validate the following:
   - PatientId in the response matches the requested PatientId.
   - Status field in the response is &#039;OK&#039;.
   - TotalDue field in the response is not null.
3. Verify the response status code is 200." finished-at="2024-11-22T19:54:07 IST" duration-ms="1186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBillingSummaryByPatientId -->
        <test-method signature="getConsumptionsListOfAPatientById()[pri:8, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" started-at="2024-11-22T19:54:07 IST" name="getConsumptionsListOfAPatientById" description="1. Send a GET request to retrieve the consumption list for a specific patient by PatientId and PatientVisitId.
2. Validate the following:
   - Status field in the response is &#039;OK&#039;.
   - PatientConsumptionId values in the response are unique.
   - TotalAmount field in each result is not null.
3. Verify the response status code is 200." finished-at="2024-11-22T19:54:08 IST" duration-ms="579" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getConsumptionsListOfAPatientById -->
        <test-method signature="getReturnConsumptionsList()[pri:9, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" started-at="2024-11-22T19:54:08 IST" name="getReturnConsumptionsList" description="1. Send a GET request to retrieve the return consumption list.
2. Validate the following:
   - Status field in the response is &#039;OK&#039;.
   - ConsumptionReturnReceiptNo values in the response are unique.
   - PatientId field in each result is not null.
3. Verify the response status code is 200." finished-at="2024-11-22T19:54:09 IST" duration-ms="715" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReturnConsumptionsList -->
        <test-method signature="getDischargedPatients()[pri:10, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" started-at="2024-11-22T19:54:09 IST" name="getDischargedPatients" description="1. Send a GET request to retrieve the list of discharged patients within a specified date range.
2. Validate the following:
   - Status field in the response is &#039;OK&#039;.
   - PatientVisitId values in the response are unique.
   - PatientAdmissionId values in the response are unique.
   - PatientId field in each result is not null.
3. Verify the response status code is 200." finished-at="2024-11-22T19:54:11 IST" duration-ms="2175" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDischargedPatients -->
        <test-method signature="getAdmittedPatients()[pri:11, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" started-at="2024-11-22T19:54:11 IST" name="getAdmittedPatients" description="1. Send a GET request to retrieve the list of admitted patients.
2. Validate the following:
   - Status field in the response is &#039;OK&#039;.
   - PatientId values in the response are unique.
   - VisitId values in the response are unique.
   - DischargeDate field for all patients is null.
3. Verify the response status code is 200." finished-at="2024-11-22T19:54:13 IST" duration-ms="2210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAdmittedPatients -->
        <test-method signature="searchIpdPatientByPatientId()[pri:12, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" started-at="2024-11-22T19:54:13 IST" name="searchIpdPatientByPatientId" description="1. Send a GET request to search for IPD patients by patient name.
2. Validate the following:
   - Status field in the response is &#039;OK&#039;.
   - PatientId is not null for all patients.
   - PatientCode is not null for all patients.
3. Verify the response status code is 200." finished-at="2024-11-22T19:54:14 IST" duration-ms="548" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchIpdPatientByPatientId -->
        <test-method signature="getPatientProvisionalInfo()[pri:13, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" started-at="2024-11-22T19:54:14 IST" name="getPatientProvisionalInfo" description="1. Send a GET request to retrieve patients&#039; provisional information.
2. Validate the following:
   - Status field in the response is &#039;OK&#039;.
   - Status code of the response is 200.
   - PatientId is not null for all patients.
   - PatientCode is not null for all patients.
" finished-at="2024-11-22T19:54:15 IST" duration-ms="1134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPatientProvisionalInfo -->
        <test-method signature="getProvisionalItemsListByPatientIdAndSchemeId()[pri:14, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" started-at="2024-11-22T19:54:15 IST" name="getProvisionalItemsListByPatientIdAndSchemeId" description="1. Send a GET request to retrieve the list of provisional items for a specific patient and scheme.
2. Validate the following:
   - Status field in the response is &#039;OK&#039;.
   - Status code of the response is 200.
   - Patient data is not null.
   - PatientId from the response matches the requested patient ID.
   - ProvisionalItems is a non-empty list of JSON objects.
   - PatientId in ProvisionalItems matches the response PatientId." finished-at="2024-11-22T19:54:17 IST" duration-ms="1907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProvisionalItemsListByPatientIdAndSchemeId -->
        <test-method signature="getInvoicesByDateRange()[pri:15, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" started-at="2024-11-22T19:54:17 IST" name="getInvoicesByDateRange" description="1. Send a GET request to fetch the list of invoices based on a specific date range (FromDate to ToDate).
2. Validate the following:
   - Status field in the response is &#039;OK&#039;.
   - Status code of the response is 200.
   - Results array (invoices) is not null and contains at least one invoice.
   - InvoiceNumber and InvoiceCode are not null for each invoice." finished-at="2024-11-22T19:54:18 IST" duration-ms="1182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInvoicesByDateRange -->
        <test-method signature="getProviderList()[pri:16, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" started-at="2024-11-22T19:54:18 IST" name="getProviderList" description="1. Send a GET request to fetch the list of providers.
2. Validate the following:
   - Status field in the response is &#039;OK&#039;.
   - Status code of the response is 200.
   - Results array (providers) is not null and contains at least one provider.
   - EmployeeId and EmployeeName are not null for each provider." finished-at="2024-11-22T19:54:20 IST" duration-ms="2054" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProviderList -->
        <test-method signature="getUserslist()[pri:17, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" started-at="2024-11-22T19:54:20 IST" name="getUserslist" description="1. Send a GET request to fetch the list of users.
2. Validate the following:
   - Status field in the response is &#039;OK&#039;.
   - Status code of the response is 200.
   - Results array (users) is not null and contains at least one user.
   - UserId is unique across all users.
   - ShortName and DepartmentName are not null for each user." finished-at="2024-11-22T19:54:21 IST" duration-ms="613" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserslist -->
        <test-method signature="getCurrentFiscalYearDetails()[pri:18, instance:testcases.RestAssured_TestCases_PL1@4c309d4d]" started-at="2024-11-22T19:54:21 IST" name="getCurrentFiscalYearDetails" description="1. Send a GET request to fetch the current fiscal year details.
2. Validate the following:
   - Status field in the response is &#039;OK&#039;.
   - Status code of the response is 200.
   - Results object is not null.
   - FiscalYearId is not null.
   - FiscalYearName is not null." finished-at="2024-11-22T19:54:21 IST" duration-ms="577" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCurrentFiscalYearDetails -->
      </class> <!-- testcases.RestAssured_TestCases_PL1 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
